#include<stdio.h>
#include<stdlib.h>
#define max 3
int isFull(int front,int rear)
{
    return(front==(rear+1)%max);
}
int isEmpty(int front)
{
    return(front==-1);
}
void Enqueue(int queue[],int *front,int *rear,int value)
{
    if(isFull(*front,*rear))
        printf("Queue full\n");
    else{
        if(*front==-1)
            *front=0;
        *rear=(*rear+1)%max;
        queue[*rear]=value;
        printf("Inserted value is %d\n",value);
    }
}
void Dequeue(int queue[],int *front,int *rear)
{

    if(isEmpty(*front))
        printf("Queue is empty\n");
    else{
        printf("Deleted element is %d\n",queue[*front]);
        if(*front==*rear)
            *front=*rear=-1;
        else
            *front=(*front+1)%max;
    }
}
void display(int queue[],int front,int rear)
{   int i;
    if(isEmpty(front))
        printf("Queue is empty\n");
    else{
        printf("The elements are:\n");
        i=front;
        while(i!=rear){
            printf("%d\n",queue[i]);
            i=(i+1)%max;
        }

    printf("%d\n",queue[i]);
    }

}
int main()
{
    int queue[max];
    int front=-1,rear=-1,choice;
    printf("1.Enqueue\n2.Dequeue\n3.Display\n4.Exit\n");
    while(1)
    {
        printf("Enter your choice:");
        scanf("%d",&choice);
        switch(choice)
        {
        case 1:printf("Enter value to insert:");
                  int value;
                  scanf("%d",&value);
                  Enqueue(queue,&front,&rear,value);
                  break;
        case 2:
            Dequeue(queue,&front,&rear);
            break;
        case 3:
            display(queue,front,rear);
            break;
        case 4:
            exit(0);
        default:
            printf("Enter valid choice\n");

        }

}
}






