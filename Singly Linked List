#include <stdio.h>
#include <stdlib.h>

struct Node {
int data;
struct Node* next;
};

struct Node* createNode(int data) {
struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
newNode->data = data;
newNode->next = NULL;
return newNode;
}

void insertAtFirst(struct Node** head, int data) {
struct Node* newNode = createNode(data);
newNode->next = *head;
*head = newNode;
}

void insertAtEnd(struct Node** head, int data) {
struct Node* newNode = createNode(data);
if (*head == NULL) {
*head = newNode;
return;
}
struct Node* temp = *head;
while (temp->next != NULL) {

temp = temp->next;
}
temp->next = newNode;
}

void insertAtPosition(struct Node** head, int data, int position) {
struct Node* newNode = createNode(data);
if (position == 0) {
insertAtFirst(head,data);
return;
}
struct Node* temp = *head;
for (int i = 0; temp != NULL && i < position - 1; i++) {
temp = temp->next;
}
if (temp == NULL) {
printf("Position out of range\n");
free(newNode);
return;
}
newNode->next = temp->next;
temp->next = newNode;
}

void deleteFromFirst(struct Node** head) {
if (*head == NULL) {
printf("List is empty\n");
return;
}
struct Node* temp = *head;
*head = temp->next;
free(temp);

}

void deleteFromEnd(struct Node** head) {
if (*head == NULL) {
printf("List is empty\n");
return;
}
struct Node* temp = *head;
if (temp->next == NULL) {
free(temp);
*head = NULL;
return;
}
while (temp->next->next != NULL) {
temp = temp->next;
}
free(temp->next);
temp->next = NULL;
}

void deleteAtPosition(struct Node** head, int position) {
if (*head == NULL) {
printf("List is empty\n");
return;
}
struct Node* temp = *head;
if (position == 0) {
deleteFromFirst(head);
return;
}
for (int i = 0; temp != NULL && i < position - 1; i++) {
temp = temp->next;

}
if (temp == NULL || temp->next == NULL) {
printf("Position out of range\n");
return;
}
struct Node* next = temp->next->next;
free(temp->next);
temp->next = next;
}

void print(struct Node* head) {
struct Node* temp = head;
while (temp != NULL) {
printf("%d -> ", temp->data);
temp = temp->next;
}
printf("NULL\n");
}

int main() {
struct Node* head = NULL;
int choice,data;
printf("Insertion:\n1.At first\n2.At End\n3.At position\n");
printf("Deletion:\n4.From first\n5.From End\n6.From position\n");
printf("7.Display\n8.Exit\n");
while(1)
{
    printf("Enter your choice:");
    scanf("%d",&choice);
    switch(choice)
    {
    case 1:
        printf("enter data to insert:");
        scanf("%d",&data);
        insertAtFirst(&head,data);
        print(head);
        break;
    case 2:
        printf("enter data to insert:");
        scanf("%d",&data);
        insertAtEnd(&head,data);
        print(head);
        break;
    case 3:
        printf("enter data to insert:");
        scanf("%d",&data);
        printf("Enter position:");
        int p;
        scanf("%d",&p);
        insertAtPosition(&head,data,p);
        print(head);
        break;
    case 4:
        deleteFromFirst(&head);
        print(head);
        break;
    case 5:
        deleteFromEnd(&head);
        print(head);
        break;
    case 6:
        printf("Enter position:");
        int q;
        scanf("%d",&q);
        deleteAtPosition(&head,q);
        print(head);
        break;
    case 7:
        print(head);
        break;
    case 8:
        exit(0);
        break;
    default:
        printf("Enter valid choice\n");
    }
}
return 0;
}
