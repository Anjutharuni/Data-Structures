#include<stdio.h>
#include<stdlib.h>
#define MAX 5

struct Stack{
    int array[MAX];
    int top;
};

void Push(int element,struct Stack *ps){
    if((*ps).top==MAX-1){
        printf("Stack is overflow!\n");
        return;
    }
    (*ps).top++;
    (*ps).array[(*ps).top]=element;
    return;
}

int Pop(struct Stack *ps1,struct Stack *ps2){
   if((*ps2).top!=-1){
      return Pop1(ps2);
   }
   if((*ps1).top==-1){
       printf("Stack is underflow!\n");
       return -1;
   }
   while((*ps1).top!=-1){
       int temp=(*ps1).array[(*ps1).top];
       (*ps1).top--;
       Push(temp,ps2);
   }
   return Pop1(ps2);
}

int Pop1(struct Stack *ps){
    if((*ps).top==-1){
        printf("No elements in Stack 2\n");
        return -1;
    }
    int value=(*ps).array[(*ps).top];
    printf("the popped element is %d ",value);
    (*ps).top--;
    return value;
}

void Display(struct Stack *ps){
    if((*ps).top==-1){
        printf("No elements in Stack\n");
        return;
    }
    printf(" the elements are: \n");
    int i;
    for(i=(*ps).top;i>=0;i--){
        printf("%d\n",(*ps).array[i]);
    }
    return;
}



int main(){
    int element,choice;
    struct Stack s1,s2;
    s1.top=-1;
    s2.top=-1;
while(1){
    printf("\n1.Push \n2.Pop \n3.Display \n4.Exit\n");
    printf("Enter the choice:");
    scanf("%d",&choice);

    switch(choice){
        case 1:
                printf("Enter the element to be pushed into the stack: ");
                scanf("%d",&element);
                Push(element,&s1);
                break;

        case 2:
                Pop(&s1,&s2);
                break;

        case 3:
                Display(&s2);
                break;

        case 4:
                exit(0);

        default:
                printf("Enter valid choice");
                break;

    }
}
return 0;
}
